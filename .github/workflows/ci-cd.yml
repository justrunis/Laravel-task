name: CI-CI-CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Laravel Tests
    runs-on: ubuntu-latest

    services:
      db:
        image: bitnami/postgresql:latest
        env:
          POSTGRESQL_DATABASE: postgres-database
          POSTGRESQL_USERNAME: postgres-username
          POSTGRESQL_PASSWORD: postgres-password
        ports:
          - 5433:5432
        options: --health-cmd "pg_isready -U laravel" --health-interval 5s --health-timeout 5s --health-retries 10

      redis:
        image: bitnami/redis:latest
        env:
          ALLOW_EMPTY_PASSWORD: "yes"
          REDIS_PASSWORD: redis-password
        ports:
          - 6380:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start Docker containers
        run: |
          docker compose up -d --build

      - name: Wait for services to be ready
        run: sleep 15

      - name: Install Composer dependencies
        run: |
          docker compose exec -T app composer install --prefer-dist --no-interaction --no-progress

      - name: Create .env file inside container
        run: docker compose exec -T app sh -c "cp .env.example .env"

      - name: Generate APP_KEY
        run: docker compose exec -T app php artisan key:generate

      - name: Set permissions for storage and bootstrap/cache
        run: |
          docker compose exec -T app chmod -R 777 storage bootstrap/cache

      - name: Run Laravel migrations
        run: |
          docker compose exec -T app php artisan migrate --env=testing --force

      - name: Run PHPUnit tests
        run: |
          docker compose exec -T app php artisan test

      - name: Stop and clean up Docker containers
        run: docker compose down

  build-and-push:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and tag Docker images
        run: |
          docker build -t ghcr.io/${{ github.repository }}/app:latest -f laravel-docker/Dockerfile .
          docker build -t ghcr.io/${{ github.repository }}/queue-worker:latest -f laravel-docker/Dockerfile .

      - name: Push images to GHCR
        run: |
          docker push ghcr.io/${{ github.repository }}/app:latest
          docker push ghcr.io/${{ github.repository }}/queue-worker:latest